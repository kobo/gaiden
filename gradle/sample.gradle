/*
 * Copyright 2014 the original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

task createSampleProject {
    doLast {
        ext.sampleProject = file("$buildDir/sample-project")
        copy {
            into sampleProject
            from file("src/sample/sample-project")
        }

        if (System.getProperty("gaiden.theme")) {
            file("$sampleProject/config.groovy").append """theme = "${System.getProperty("gaiden.theme")}"\n"""
        }

        println "Created a sample project at $sampleProject"
    }
}

task buildSampleProject(dependsOn: ["install", "createSampleProject"]) {
    doLast {
        executeCommand(["$buildDir/install/gaiden/bin/gaiden", "build"], createSampleProject.sampleProject)
    }
}

def executeCommand(List command, File workDir, Map env = [:]) {
    println ">> Executing command..."
    println "\$ ${command.join(' ')}"
    def builder = new ProcessBuilder(command as String[])
    builder.directory(workDir)
    def p = builder.start()
    p.consumeProcessOutput(System.out as OutputStream, System.err as OutputStream)
    // Gradle's wrapper stream writes nothing to console
    int statusCode = p.waitFor()
    if (statusCode != 0) {
        println "Exit for status code $statusCode"
        throw new GradleScriptException("Exit for status code $statusCode while executing '${command.join(' ')}'", null)
    }
}
